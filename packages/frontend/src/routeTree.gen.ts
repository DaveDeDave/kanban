/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/auth'
import { Route as AppImport } from './routes/app'
import { Route as PublicImport } from './routes/_public'
import { Route as AppBoardsImport } from './routes/app/boards'
import { Route as AppBoardsBoardIdImport } from './routes/app/boards/$boardId'

// Create Virtual Routes

const AuthIndexLazyImport = createFileRoute('/auth/')()
const AppIndexLazyImport = createFileRoute('/app/')()
const PublicIndexLazyImport = createFileRoute('/_public/')()
const PublicAboutLazyImport = createFileRoute('/_public/about')()
const AppProfileIndexLazyImport = createFileRoute('/app/profile/')()
const AppBoardsIndexLazyImport = createFileRoute('/app/boards/')()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexLazyRoute = AuthIndexLazyImport.update({
  path: '/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/auth/index.lazy').then((d) => d.Route))

const AppIndexLazyRoute = AppIndexLazyImport.update({
  path: '/',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/app/index.lazy').then((d) => d.Route))

const PublicIndexLazyRoute = PublicIndexLazyImport.update({
  path: '/',
  getParentRoute: () => PublicRoute,
} as any).lazy(() => import('./routes/_public/index.lazy').then((d) => d.Route))

const PublicAboutLazyRoute = PublicAboutLazyImport.update({
  path: '/about',
  getParentRoute: () => PublicRoute,
} as any).lazy(() => import('./routes/_public/about.lazy').then((d) => d.Route))

const AppBoardsRoute = AppBoardsImport.update({
  path: '/boards',
  getParentRoute: () => AppRoute,
} as any)

const AppProfileIndexLazyRoute = AppProfileIndexLazyImport.update({
  path: '/profile/',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/app/profile/index.lazy').then((d) => d.Route),
)

const AppBoardsIndexLazyRoute = AppBoardsIndexLazyImport.update({
  path: '/',
  getParentRoute: () => AppBoardsRoute,
} as any).lazy(() =>
  import('./routes/app/boards/index.lazy').then((d) => d.Route),
)

const AppBoardsBoardIdRoute = AppBoardsBoardIdImport.update({
  path: '/$boardId',
  getParentRoute: () => AppBoardsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/app/boards': {
      id: '/app/boards'
      path: '/boards'
      fullPath: '/app/boards'
      preLoaderRoute: typeof AppBoardsImport
      parentRoute: typeof AppImport
    }
    '/_public/about': {
      id: '/_public/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof PublicAboutLazyImport
      parentRoute: typeof PublicImport
    }
    '/_public/': {
      id: '/_public/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof PublicIndexLazyImport
      parentRoute: typeof PublicImport
    }
    '/app/': {
      id: '/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof AppIndexLazyImport
      parentRoute: typeof AppImport
    }
    '/auth/': {
      id: '/auth/'
      path: '/'
      fullPath: '/auth/'
      preLoaderRoute: typeof AuthIndexLazyImport
      parentRoute: typeof AuthImport
    }
    '/app/boards/$boardId': {
      id: '/app/boards/$boardId'
      path: '/$boardId'
      fullPath: '/app/boards/$boardId'
      preLoaderRoute: typeof AppBoardsBoardIdImport
      parentRoute: typeof AppBoardsImport
    }
    '/app/boards/': {
      id: '/app/boards/'
      path: '/'
      fullPath: '/app/boards/'
      preLoaderRoute: typeof AppBoardsIndexLazyImport
      parentRoute: typeof AppBoardsImport
    }
    '/app/profile/': {
      id: '/app/profile/'
      path: '/profile'
      fullPath: '/app/profile'
      preLoaderRoute: typeof AppProfileIndexLazyImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  PublicRoute: PublicRoute.addChildren({
    PublicAboutLazyRoute,
    PublicIndexLazyRoute,
  }),
  AppRoute: AppRoute.addChildren({
    AppBoardsRoute: AppBoardsRoute.addChildren({
      AppBoardsBoardIdRoute,
      AppBoardsIndexLazyRoute,
    }),
    AppIndexLazyRoute,
    AppProfileIndexLazyRoute,
  }),
  AuthRoute: AuthRoute.addChildren({ AuthIndexLazyRoute }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_public",
        "/app",
        "/auth"
      ]
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/about",
        "/_public/"
      ]
    },
    "/app": {
      "filePath": "app.tsx",
      "children": [
        "/app/boards",
        "/app/",
        "/app/profile/"
      ]
    },
    "/auth": {
      "filePath": "auth.tsx",
      "children": [
        "/auth/"
      ]
    },
    "/app/boards": {
      "filePath": "app/boards.tsx",
      "parent": "/app",
      "children": [
        "/app/boards/$boardId",
        "/app/boards/"
      ]
    },
    "/_public/about": {
      "filePath": "_public/about.lazy.tsx",
      "parent": "/_public"
    },
    "/_public/": {
      "filePath": "_public/index.lazy.tsx",
      "parent": "/_public"
    },
    "/app/": {
      "filePath": "app/index.lazy.tsx",
      "parent": "/app"
    },
    "/auth/": {
      "filePath": "auth/index.lazy.tsx",
      "parent": "/auth"
    },
    "/app/boards/$boardId": {
      "filePath": "app/boards/$boardId.tsx",
      "parent": "/app/boards"
    },
    "/app/boards/": {
      "filePath": "app/boards/index.lazy.tsx",
      "parent": "/app/boards"
    },
    "/app/profile/": {
      "filePath": "app/profile/index.lazy.tsx",
      "parent": "/app"
    }
  }
}
ROUTE_MANIFEST_END */
